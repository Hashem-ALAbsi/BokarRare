// <auto-generated />
using System;
using BokarRare.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BokarRare.Migrations
{
    [DbContext(typeof(ApplicetionDbContext))]
    [Migration("20231015183215_InitilazeData")]
    partial class InitilazeData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BokarRare.Models.cls_curse", b =>
                {
                    b.Property<int>("CurseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurseId"), 1L, 1);

                    b.Property<string>("CurseName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("CurseId");

                    b.ToTable("Curses", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_dagree", b =>
                {
                    b.Property<int>("DagreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DagreeId"), 1L, 1);

                    b.Property<int>("Etamate")
                        .HasColumnType("int");

                    b.Property<int>("FinalXame")
                        .HasColumnType("int");

                    b.Property<int>("MideXame")
                        .HasColumnType("int");

                    b.Property<int>("StuHW")
                        .HasColumnType("int");

                    b.Property<int>("StuId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("DagreeId");

                    b.HasIndex("StuId");

                    b.ToTable("Dagree", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_Student", b =>
                {
                    b.Property<int>("StuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StuId"), 1L, 1);

                    b.Property<int>("CurseId")
                        .HasColumnType("int");

                    b.Property<string>("StuAddress")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("StuBirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("StuImage")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("StuName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("StuPhone")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("StuTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("StuId");

                    b.HasIndex("CurseId");

                    b.HasIndex("TypeId");

                    b.ToTable("Students", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_Tectar", b =>
                {
                    b.Property<int>("TechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechId"), 1L, 1);

                    b.Property<int>("CurseId")
                        .HasColumnType("int");

                    b.Property<string>("TechAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechImage")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TechName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TechSal")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("TechId");

                    b.HasIndex("CurseId");

                    b.ToTable("Techares", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("TypeId");

                    b.ToTable("Types", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_TypeUser", b =>
                {
                    b.Property<int>("TypeUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeUserId"), 1L, 1);

                    b.Property<string>("TypeUserName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("TypeUserId");

                    b.ToTable("TypeUsers", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("TypeUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassowrd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("TypeUserId");

                    b.ToTable("Users", "BR");
                });

            modelBuilder.Entity("BokarRare.Models.cls_dagree", b =>
                {
                    b.HasOne("BokarRare.Models.cls_Student", "student")
                        .WithMany()
                        .HasForeignKey("StuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("BokarRare.Models.cls_Student", b =>
                {
                    b.HasOne("BokarRare.Models.cls_curse", "curse")
                        .WithMany()
                        .HasForeignKey("CurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BokarRare.Models.cls_Type", "type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("curse");

                    b.Navigation("type");
                });

            modelBuilder.Entity("BokarRare.Models.cls_Tectar", b =>
                {
                    b.HasOne("BokarRare.Models.cls_curse", "curse")
                        .WithMany()
                        .HasForeignKey("CurseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("curse");
                });

            modelBuilder.Entity("BokarRare.Models.cls_User", b =>
                {
                    b.HasOne("BokarRare.Models.cls_TypeUser", "typeUser")
                        .WithMany()
                        .HasForeignKey("TypeUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typeUser");
                });
#pragma warning restore 612, 618
        }
    }
}
